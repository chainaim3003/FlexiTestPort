def main(_0, _1, _2) -> (3):
	# _4, _5 = ConditionEq(1 * _0)
	(1 * _0) * (1 * _5) == 1 * _4
	(1 * ~one + (-1) * _4) * (1 * _0) == 0
	# _15, _16 = ConditionEq(1 * _1)
	(1 * _1) * (1 * _16) == 1 * _15
	(1 * ~one + (-1) * _15) * (1 * _1) == 0
	# _26, _27 = ConditionEq(1 * _2)
	(1 * _2) * (1 * _27) == 1 * _26
	(1 * ~one + (-1) * _26) * (1 * _2) == 0
	(1 * ~one) * (1 * ~one + 1 * _4) == 1 * ~out_0
	(1 * ~one) * (2 * ~one + 1 * _15) == 1 * ~out_1
	(1 * ~one) * (3 * ~one + 1 * _26) == 1 * ~out_2
	 return ~out_0, ~out_1, ~out_2
